vunit i_serializer(serializer(synthesis))
{
   -- set all declarations to run on clk_i
   default clock is rising_edge(clk_i);


   --------------------------------------------
   -- ASSERTIONS ABOUT OUTPUTS
   --------------------------------------------

   -- Output must be empty during reset
   f_after_reset : assert always {rst_i} |=> {not m_valid_o};

   -- Output must be stable until accepted
   f_output_stable : assert always {m_valid_o and not m_ready_i and not rst_i} |=>
      {(stable(m_valid_o) and stable(m_data_o)) or rst_i};


   --------------------------------------------
   -- ASSUMPTIONS ABOUT INPUTS
   --------------------------------------------

   -- Require reset at startup.
   f_reset : assume {rst_i};

   f_input_stable : assume always {s_valid_i and not s_ready_o and not rst_i} |=>
      {stable(s_valid_i) and stable(s_data_i)};


   --------------------------------------------
   -- COVER STATEMENTS TO VERIFY REACHABILITY
   --------------------------------------------

   f_full_to_empty : cover {m_valid_o and not rst_i;
                            not m_valid_o};

} -- vunit i_serializer(serializer(synthesis))

