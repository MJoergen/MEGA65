vunit i_uart(uart(synthesis))
{
   -- set all declarations to run on clk_i
   default clock is rising_edge(clk_i);


   --------------------------------------------
   -- ASSERTIONS ABOUT OUTPUTS
   --------------------------------------------

   -- Output must be empty after reset
   f_after_reset_rx : assert always {rst_i} |=> not rx_valid_o;
   f_after_reset_uart : assert always {rst_i} |=> uart_tx_o;

   -- Output must be stable until accepted
   f_output_stable : assert always {rx_valid_o and not rx_ready_i and not rst_i} |=>
      {stable(rx_valid_o) and stable(rx_data_o)};


   --------------------------------------------
   -- ASSUMPTIONS ABOUT INPUTS
   --------------------------------------------

   -- Require reset at startup.
   f_reset : assume {rst_i};

   f_input_stable : assume always {tx_valid_i and not tx_ready_o and not rst_i} |=>
      {stable(tx_valid_i) and stable(tx_data_i)};


   --------------------------------------------
   -- COVER STATEMENTS TO VERIFY REACHABILITY
   --------------------------------------------

   f_full_to_empty : cover {rx_valid_o and not rst_i;
                            not rx_valid_o};

} -- vunit i_uart(uart(synthesis))

